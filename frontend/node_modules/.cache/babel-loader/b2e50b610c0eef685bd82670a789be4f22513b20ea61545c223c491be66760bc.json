{"ast":null,"code":"var _jsxFileName = \"/Users/rohundhar/Desktop/Projects/kcs/frontend/src/components/StagingArea.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createNote, getNotes } from '../api/apiClient';\nimport LinkEditor from './LinkEditor';\nimport { commitNote } from '../api/apiClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StagingArea = ({\n  onCommit\n}) => {\n  _s();\n  const [stagedNotes, setStagedNotes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [category, setCategory] = useState('Fleeting');\n  const [selectedStagedNote, setSelectedStagedNote] = useState(null);\n  const [suggestedLinks, setSuggestedLinks] = useState([]);\n  const fetchStagedNotes = async () => {\n    try {\n      const response = await getNotes('staged');\n      setStagedNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching staged notes:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchStagedNotes();\n  }, []);\n  const handleCreateNote = async e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert(\"Title is required.\");\n      return;\n    }\n    try {\n      await createNote({\n        title,\n        body,\n        category\n      });\n      setTitle('');\n      setBody('');\n      setCategory('Fleeting');\n      fetchStagedNotes();\n    } catch (error) {\n      console.error(\"Error creating note:\", error);\n    }\n  };\n  const handleCommit = async () => {\n    if (!selectedStagedNote) return;\n    try {\n      await commitNote(selectedStagedNote._id, suggestedLinks);\n      alert(\"Note committed successfully!\");\n      setSelectedStagedNote(null);\n      setSuggestedLinks([]);\n      fetchStagedNotes();\n      onCommit(); // Notify parent to refresh committed list\n    } catch (error) {\n      console.error(\"Error committing note:\", error);\n      alert(\"Failed to commit note.\");\n    }\n  };\n  const handleSelectStagedNote = note => {\n    setSelectedStagedNote(note);\n    setSuggestedLinks([]); // Reset links when selecting a new note\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"staging-area-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateNote,\n        className: \"new-note-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Body\",\n          value: body,\n          rows: 4,\n          onChange: e => setBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fleeting\",\n            children: \"Fleeting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Literature\",\n            children: \"Literature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Deduction\",\n            children: \"Deduction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button\",\n          children: \"Create Staged Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-list-container\",\n      children: stagedNotes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `note-list-item ${(selectedStagedNote === null || selectedStagedNote === void 0 ? void 0 : selectedStagedNote._id) === note._id ? 'selected' : ''}`,\n        onClick: () => handleSelectStagedNote(note),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", note.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), selectedStagedNote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"staging-area-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Linking: \", selectedStagedNote.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(LinkEditor, {\n        suggestedLinks: suggestedLinks,\n        setSuggestedLinks: setSuggestedLinks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCommit,\n        className: \"commit-button\",\n        children: \"Commit Note & Links\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(StagingArea, \"WI06Q2kbth7kxp1XpViT++sclnQ=\");\n_c = StagingArea;\nexport default StagingArea;\nvar _c;\n$RefreshReg$(_c, \"StagingArea\");","map":{"version":3,"names":["React","useState","useEffect","createNote","getNotes","LinkEditor","commitNote","jsxDEV","_jsxDEV","Fragment","_Fragment","StagingArea","onCommit","_s","stagedNotes","setStagedNotes","title","setTitle","body","setBody","category","setCategory","selectedStagedNote","setSelectedStagedNote","suggestedLinks","setSuggestedLinks","fetchStagedNotes","response","data","error","console","handleCreateNote","e","preventDefault","trim","alert","handleCommit","_id","handleSelectStagedNote","note","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","rows","map","onClick","_c","$RefreshReg$"],"sources":["/Users/rohundhar/Desktop/Projects/kcs/frontend/src/components/StagingArea.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createNote, getNotes } from '../api/apiClient';\nimport { Note, SuggestedLink } from '../types';\nimport LinkEditor from './LinkEditor';\nimport { commitNote } from '../api/apiClient';\n\ninterface StagingAreaProps {\n  onCommit: () => void;\n}\n\nconst StagingArea: React.FC<StagingAreaProps> = ({ onCommit }) => {\n  const [stagedNotes, setStagedNotes] = useState<Note[]>([]);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [category, setCategory] = useState<'Fleeting' | 'Literature' | 'Deduction'>('Fleeting');\n  \n  const [selectedStagedNote, setSelectedStagedNote] = useState<Note | null>(null);\n  const [suggestedLinks, setSuggestedLinks] = useState<SuggestedLink[]>([]);\n\n  const fetchStagedNotes = async () => {\n    try {\n      const response = await getNotes('staged');\n      setStagedNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching staged notes:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchStagedNotes();\n  }, []);\n\n  const handleCreateNote = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert(\"Title is required.\");\n      return;\n    }\n    try {\n      await createNote({ title, body, category });\n      setTitle('');\n      setBody('');\n      setCategory('Fleeting');\n      fetchStagedNotes();\n    } catch (error) {\n      console.error(\"Error creating note:\", error);\n    }\n  };\n\n  const handleCommit = async () => {\n    if (!selectedStagedNote) return;\n    try {\n        await commitNote(selectedStagedNote._id, suggestedLinks);\n        alert(\"Note committed successfully!\");\n        setSelectedStagedNote(null);\n        setSuggestedLinks([]);\n        fetchStagedNotes();\n        onCommit(); // Notify parent to refresh committed list\n    } catch (error) {\n        console.error(\"Error committing note:\", error);\n        alert(\"Failed to commit note.\");\n    }\n  }\n\n  const handleSelectStagedNote = (note: Note) => {\n    setSelectedStagedNote(note);\n    setSuggestedLinks([]); // Reset links when selecting a new note\n  }\n\n  return (\n    <>\n      <div className=\"staging-area-container\">\n        <h4>Create New Note</h4>\n        <form onSubmit={handleCreateNote} className=\"new-note-form\">\n          <input\n            type=\"text\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <textarea\n            placeholder=\"Body\"\n            value={body}\n            rows={4}\n            onChange={(e) => setBody(e.target.value)}\n          ></textarea>\n          <select value={category} onChange={(e) => setCategory(e.target.value as any)}>\n            <option value=\"Fleeting\">Fleeting</option>\n            <option value=\"Literature\">Literature</option>\n            <option value=\"Deduction\">Deduction</option>\n          </select>\n          <button type=\"submit\" className=\"button\">Create Staged Note</button>\n        </form>\n      </div>\n      <div className=\"note-list-container\">\n        {stagedNotes.map((note) => (\n          <div \n            key={note._id} \n            className={`note-list-item ${selectedStagedNote?._id === note._id ? 'selected' : ''}`}\n            onClick={() => handleSelectStagedNote(note)}\n          >\n            <h3>{note.title}</h3>\n            <p>Category: {note.category}</p>\n          </div>\n        ))}\n      </div>\n       {selectedStagedNote && (\n          <div className=\"staging-area-container\">\n              <h4>Linking: {selectedStagedNote.title}</h4>\n              <LinkEditor\n                suggestedLinks={suggestedLinks}\n                setSuggestedLinks={setSuggestedLinks}\n              />\n              <button onClick={handleCommit} className=\"commit-button\">Commit Note & Links</button>\n          </div>\n       )}\n    </>\n  );\n};\n\nexport default StagingArea;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}